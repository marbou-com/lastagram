
https://www.youtube.com/watch?v=zSFc5Za2bZg
https://www.youtube.com/watch?v=6aC-3AQYHoc

■■■■■■■env書き換え
　APP_NAME=members

　DB_CONNECTION=mysql
　DB_HOST=127.0.0.1
　DB_PORT=8888
　DB_SOCKET=/Applications/MAMP/tmp/mysql/mysql.sock
　DB_DATABASE=larastagram
　DB_USERNAME=root
　DB_PASSWORD=root


■■■■■■■
cd larastagram
composer install

npm install
php artisan key:generate

php artisan serve

■■■■■■■Laravel/uiのインストールと展開
composer require laravel/ui
php artisan ui vue --auth


php artisan migrate:fresh







===========以下参考程度に===========

■Laravel/uiのインストールと展開
composer require laravel/ui
php artisan ui vue --auth
php artisan ui bootstrap
npm install && npm run dev

■コメント：コマンド＋/

■カラム追加用のマイグレーションファイル
php artisan make:migration add_tag_id_to_memos_table --table=memos

■DBやマイグレするときの複数、単数系
php artisan tinker
echo Str::plural('book');//単数→複数
echo Str::singular('books');//複数→単数


route('ルート名', ['プロパティ名'=>'値'])

index	  データを一覧表示
create	新規作成用フォームの表示
store	  新規作成を保存
show	  作成データを個別表示
edit	  作成データ編集用フォームの表示
update	編集したデータを保存
destroy	データを削除
 

  //Laravel UI導入
  388  composer require laravel/ui
  389  php artisan ui vue --auth
  390  npm install && npm run dev
  391  php artisan ui bootstrap
  392  npm install && npm run dev

  //モデル作成
  php artisan make:model Post

  //コントローラー作成
  php artisan make:controller postController --resource

  //マイフレファイル新規作成と実行
 php artisan make:migration create_posts_to_table --create=posts
 php artisan migrate
 php artisan migrate:fresh//一旦全テーブル削除してからマイグレーションし直す
 php artisan migrate:refresh//全部ロールバックしてからマイグレーションし直す

  //マイフレファイル更新と実行
  397  php artisan make:migration add_post_id_to_table  --table=posts
  398  php artisan migrate

  //ルート一覧
  php artisan route:list
  //web.php修正したらやる
  php artisan route:cache

  //バリデーション作成
  php artisan make:request PostRequest

  //画像ファイルシンボリックリンク
  php artisan storage:link


  //サービスプロバイダー 参考:https://hara-chan.com/it/programming/laravel-view-viewcompoer/
  php artisan make:provider SideServiceProvider






===========Schedulerを使おう!!
コマンド実行ファイル作成
php artisan make:command delOldPost

\App\Console\Commands\delOldPostファイル修正
　protected $signature = 'command:deloldpost';//コマンド名
　public function handle()　
    {
        //処理内容
    }

手動実行してみる
php artisan command:deloldpost

カーネルファイル修正
\App\Console\Kernelファイル修正
    protected $commands = [
        \App\Console\Commands\delOldPost::class
    ];
    protected function schedule(Schedule $schedule)
    {
      　//コマンド名と実行タイミング
        $schedule->command('command:deloldpost')
        ->everyMinute();
    }

クーロンタブ修正
cronrab -e
* * * * * cd /Applications/MAMP/htdocs/larastagram && php artisan schedule:run >> /dev/null 2>&1

/Applications/MAMP/htdocs/larastagram:パス

:wで保存
:qで抜ける
crontab -lで確認







参考
https://hara-chan.com/it/programming/laravel-view-viewcompoer/
https://memocarilog.info/php-mysql/8749

Git
https://zenn.dev/toshihide2000/articles/d0c99f96e2706a
https://cpoint-lab.co.jp/article/202108/20760/



git init
git add .
git commit -m 'コミットメッセージ'
git remote add origin https://github.com/marbou-com/lastagram.git
git push origin master